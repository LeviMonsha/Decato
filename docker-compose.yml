services:
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    ports:
      - "${PGADMIN_PORT}:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    depends_on:
      - postgres
    volumes:
      - pgadmin_data:/var/lib/pgadmin

  postgres:
    container_name: postgres
    image: postgres:latest
    ports:
      - "${POSTGRES_DB_PORT}:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_DB_USER}
      POSTGRES_PASSWORD: ${POSTGRES_DB_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/postgresql/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./database/postgresql/schemas/schema.sql:/docker-entrypoint-initdb.d/schema.sql

  clickhouse:
    container_name: clickhouse
    image: clickhouse/clickhouse-server:latest
    ports:
      - "${CLICKHOUSE_DB_PORT}:8123"
      - "${CLICKHOUSE_DB_WEB_PORT}:9000"
    volumes:
      - clickhouse_data:/var/lib/clickhouse
      - ./database/clickhouse/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./database/clickhouse/users.xml:/etc/clickhouse-server/users.d/admin.xml
    environment:
      CLICKHOUSE_USER: ${CLICKHOUSE_DB_USER}
      CLICKHOUSE_PASSWORD: ${CLICKHOUSE_DB_PASSWORD}
      CLICKHOUSE_DB: ${CLICKHOUSE_DB_NAME}

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management
    ports:
      - "${RABBITMQ_AMQP_PORT}:5672"
      - "${RABBITMQ_WEB_PORT}:15672"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASS}

  # bd_processor:
  #   build: ./Dockerfile.scala

  nn_service:
    container_name: nn_service
    build:
      context: ./backend/services/nn
      dockerfile: Dockerfile
    ports:
      - "${NN_SERVICE_PORT}:25"
    depends_on:
      - rabbitmq
      - clickhouse

  news_service:
    container_name: news_service
    build:
      context: ./backend/services/news
      dockerfile: Dockerfile
    ports:
      - "${NEWS_SERVICE_PORT}:26"
    depends_on:
      - rabbitmq
      - clickhouse
      - postgres
    environment:
      POSTGRES_DB_USER: ${POSTGRES_DB_USER}
      POSTGRES_DB_PASSWORD: ${POSTGRES_DB_PASSWORD}
      POSTGRES_DB_HOST: ${POSTGRES_DB_HOST}
      POSTGRES_DB_PORT: ${POSTGRES_DB_PORT}
      POSTGRES_DB_NAME: ${POSTGRES_DB_NAME}

  server:
    container_name: server
    build:
      context: ./backend/server/deca
      dockerfile: Dockerfile
    ports:
      - "${SERVER_PORT}:8080"
    depends_on:
      - clickhouse
      - postgres
    environment:
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}

  nginx:
    container_name: nginx
    image: nginx:latest
    ports:
      - "${PROXY_PORT}:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./client/build:/usr/share/nginx/html
    depends_on:
      - client
      - server

  client:
    container_name: client
    build:
      context: ./frontend/client
      dockerfile: Dockerfile
    ports:
      - "${CLIENT_PORT}:3000"
    depends_on:
      - server
    environment:
      REACT_APP_CAPTCHA_API_KEY: ${CAPTCHA_API_KEY}

  # electron:
  #   build: ./Dockerfile.electron
  #   ports:
  #     - "8080:8080"
  #   depends_on:
  #     - server
  #   environment:
  #     - NODE_ENV=development

volumes:
  clickhouse_data:
  postgres_data:
  pgadmin_data:
